{"version":3,"sources":["assets/images/burger-logo.png","hoc/Aux/Aux.js","component/Logo/Logo.js","component/Navigation/NavigationItems/NavigationItems.js","component/Navigation/SideDrawer/DrawerToogle/DrawerToogle.js","component/Navigation/Toolbar/Toolbar.js","component/UI/Backdrop/Backdrop.js","component/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","component/Burger/BurgerIngredient/BurgerIngredient.js","component/Burger/Burger.js","component/Burger/BuildControls/BuildControl/BuildControl.js","component/Burger/BuildControls/BuildControls.js","component/UI/Modal/Modal.js","component/UI/Button/Button.js","component/Burger/OrderSummary/OrderSummary.js","axios-orders.js","component/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","container/BurgerBuilder/BurgerBuilder.js","component/Order/CheckoutSummary/CheckoutSummary.js","component/UI/Input/Input.js","container/Checkout/DiliveryData/DiliveryData.js","container/Checkout/Checkout.js","component/Order/Order.js","container/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","style","height","src","logoUrl","alt","navigationItems","to","exact","drawerToogle","onClick","click","toolbar","toogle","backdrop","show","sideDrawer","attachedClasses","open","join","Aux","close","layout","state","showSideDrawer","closeSideDrawerHandler","setState","toogleSideDrawerHandler","prevState","this","Component","BurgerIngredient","ingredient","type","burger","burgerIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removeIngredient","disabled","addIngredient","controls","buildControls","totalPrice","ctrl","purchaseable","purchasing","modal","nextProps","nextState","modalClose","transform","opacity","button","orderSummary","textTransform","continuePurchase","cancelPurchase","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","error","errorConfirmHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","INGREDIENT_PRICES","salad","meat","cheese","bacon","loading","continuePurchaseHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","cancelPurchaseHandler","purchaseHandler","updatedPurchaseState","sum","addIngredientHandler","newCount","updatedIngredients","priceAddition","newPrice","removeIngredientHandler","get","then","data","catch","disabledInfo","OrderSummary","textAlign","checkoutSummary","width","margin","checkoutContinue","checkoutCancel","input","otherProps","dangerouslySetInnerHTML","inputElement","undefined","options","option","value","displayValue","DiliveryData","isFormValid","orderForm","name","validity","required","isValid","isTouched","street","postalCode","country","email","isEmail","dilivery","orderHandler","event","preventDefault","order","price","customer","address","post","console","log","checkValidity","rules","trim","lastAtPos","lastIndexOf","lastDotPos","indexOf","inputChangeHandler","target","form","onSubmit","placeholder","onChange","checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","amount","ingredientsOutput","ig","display","border","padding","orders","fetchedOrders","id","reverse","App","component","BurgerBuilder","Checkout","Orders","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9466095a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport logoUrl from '../../assets/images/burger-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className='Logo' style={{ height: props.height }}>\n        <img src={ logoUrl } alt='MyBurger'/>\n    </div>\n)\n\nexport default logo;","import React from 'react';\nimport './NavigationItems.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItems = (props) => (\n    <ul className='NavigationItems'>\n        <li className='NavigationItem'><NavLink to='/' exact>Burger Builder</NavLink></li>\n        <li className='NavigationItem'><NavLink to='/orders'>Orders</NavLink></li>\n    </ul>\n)\n\nexport default navigationItems;","import React from 'react';\nimport './DrawerToogle.css';\n\nconst drawerToogle = (props) => (\n    <div onClick={props.click} className='DrawerToggle'>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default drawerToogle;","import React from 'react';\nimport './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToogle from '../SideDrawer/DrawerToogle/DrawerToogle';\n\nconst toolbar = (props) => (\n    <header className='Toolbar'>\n        <DrawerToogle click={ props.toogle } />\n        <Logo height='80%' />\n        <nav className='DesktopOnly'>\n            <NavigationItems />\n        </nav>\n    </header>\n)\n\nexport default toolbar;","import React from 'react';\nimport './Backdrop.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className='Backdrop' onClick={ props.click }></div> : null\n)\n\nexport default backdrop","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n    const attachedClasses = ['SideDrawer', props.open ? 'Open' : 'Close'].join(' ');\n    return (\n        <Aux>\n            <Backdrop show={ props.open } click={ props.close }/>\n            <div className={ attachedClasses }>\n                <Logo height='11%' />\n                <NavigationItems />\n            </div>\n        </Aux>\n    )\n}\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport './Layout.css';\nimport Toolbar from '../../component/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../component/Navigation/SideDrawer/SideDrawer';\n\nclass layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    closeSideDrawerHandler = () => {\n        this.setState({ showSideDrawer: false });\n    }\n\n    toogleSideDrawerHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        });\n    }\n\n    render() {\n        return(\n            <Aux>\n                <Toolbar toogle={ this.toogleSideDrawerHandler } />\n                <SideDrawer open={ this.state.showSideDrawer } close={ this.closeSideDrawerHandler } />\n                <main className='Content'>\n                    { this.props.children }\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default layout;","import React, { Component } from 'react';\nimport './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n        switch( this.props.type ) {\n            case ( 'bread-bottom' ):\n                ingredient = <div className='BreadBottom'></div>\n                break;\n            \n            case ( 'bread-top' ):\n                ingredient = (\n                    <div className='BreadTop'>\n                        <div className='Seeds1'></div>\n                        <div className='Seeds2'></div>\n                    </div>\n                )\n                break;\n            \n            case ( 'meat' ):\n                ingredient = <div className='Meat'></div>\n                break;\n            \n            case ( 'cheese' ):\n                ingredient = <div className='Cheese'></div>\n                break;\n            \n            case ( 'bacon' ):\n                ingredient = <div className='Bacon'></div>\n                break;\n            \n            case ( 'salad' ):\n                ingredient = <div className='Salad'></div>\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let burgerIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key={ igKey + i } type={ igKey } />\n        })\n    })\n    .reduce((arr, el) => {\n        return arr.concat(el);\n    }, []);\n\n\n    if (burgerIngredients.length === 0) {\n        burgerIngredients = <p>Please start adding ingredients!</p>\n    }\n\n    return (\n        <div className='Burger'>\n            <BurgerIngredient type='bread-top'/>\n            { burgerIngredients }\n            <BurgerIngredient type='bread-bottom'/>\n        </div>\n    )\n}\n\nexport default burger;","import React from 'react';\nimport './BuildControl.css'\n\nconst buildControl = (props) => (\n    <div className='BuildControl'>\n        <div className='Label'>{ props.label }</div>\n        <button className='Less' onClick={ () => props.removeIngredient(props.type) } disabled={ props.disabled }>-</button>\n        <button className='More' onClick={ () => props.addIngredient(props.type) }>+</button>\n    </div>\n)\n\nexport default buildControl;","import React from 'react';\nimport './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Meat', type: 'meat' },\n    { label: 'Cheese', type: 'cheese' },\n]\n\nconst buildControls = (props) => (\n    <div className='BuildControls'>\n        <p>Current Price: &#8377;<strong>{ props.totalPrice }</strong></p>\n        { controls.map(ctrl => (\n            <BuildControl \n                label={ ctrl.label } \n                key={ ctrl.label } \n                type={ ctrl.type } \n                addIngredient={ props.addIngredient } \n                removeIngredient={ props.removeIngredient } \n                disabled={ props.disabled[ctrl.type] } />\n        )) }\n        <button \n            className='OrderButton' \n            disabled={ !props.purchaseable }\n            onClick={ props.purchasing }>ORDER NOW!</button>\n    </div>\n)\n\nexport default buildControls;","import React, { Component } from 'react';\nimport './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass modal extends Component {\n    shouldComponentUpdate (nextProps, nextState) {\n        return nextProps.show !==this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop \n                    show={ this.props.show } \n                    click={ this.props.modalClose } />\n                <div \n                    className='Modal' \n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-50vh)',\n                        opacity: this.props.show ? 1 : 0\n                    }}>\n                    { this.props.children }\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default modal;","import React from 'react';\nimport './Button.css';\n\nconst button = (props) => (\n    <button \n        className={['Button', props.type ].join(' ')}\n        onClick={ props.click }\n        disabled={ props.disabled }>{ props.children }</button>\n)\n\nexport default button;","import React from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const ingredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={ igKey }>\n                    <span style={{textTransform: 'capitalize'}}>{ igKey }</span>: { props.ingredients[igKey] }\n                </li>\n            )\n        });\n    return  (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients: </p>\n            <ul>\n                { ingredients }\n            </ul>\n            <strong>Total Price: &#8377;{ props.totalPrice }</strong>\n            <p>Continue to checkout?</p>\n            <Button type='Success' click={ props.continuePurchase }>CONTINUE</Button>\n            <Button type='Danger' click={ props.cancelPurchase }>CANCEL</Button>\n        </Aux>\n    )\n}\n\nexport default orderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burger-builder-f4829.firebaseio.com/'\n});\n\nexport default instance;","import React from 'react';\nimport './Spinner.css';\n\nconst spinner = (props) => (\n    <div className='Loader' style={ props.style }>Loading...</div>\n)\n\nexport default spinner;","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport Modal from '../../component/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => class extends Component {\n    state = {\n        error: null\n    }\n\n    componentWillMount () {\n        this.reqInterceptor = axios.interceptors.request.use(req => {\n            this.setState({ error: null });\n            return req\n        });\n        this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n            this.setState({ error });\n        });\n    }\n\n    componentWillUnmount () {\n        axios.interceptors.request.eject(this.reqInterceptor);\n        axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmHandler = () => {\n        this.setState({ error: null })\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Modal \n                    show={ this.state.error }\n                    modalClose={ this.errorConfirmHandler }>\n                    { this.state.error ? this.state.error.message : null }\n                </Modal>\n                <WrappedComponent {...this.props} />\n            </Aux>\n        )\n    }\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../component/Burger/Burger';\nimport BuildControls from '../../component/Burger/BuildControls/BuildControls';\nimport Modal from '../../component/UI/Modal/Modal';\nimport OrderSummary from '../../component/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../component/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENT_PRICES = {\n    salad: 5,\n    meat: 15,\n    cheese: 10,\n    bacon: 10\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: null,\n        totalPrice: 30,\n        purchaseable: false,\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount () {\n        axios.get('https://burger-builder-f4829.firebaseio.com/ingredients.json')\n            .then((response) => {\n                this.setState({ ingredients: response.data })\n            }).catch(error => {\n                this.setState({ error: true })\n            });\n    }\n\n    continuePurchaseHandler = () => {\n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('totalPrice=' + this.state.totalPrice);\n        const queryString = queryParams.join('&')\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n    }\n\n    cancelPurchaseHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true });\n    }\n\n    updatedPurchaseState = (ingredient) => {\n        const ingredients = {\n            ...ingredient\n        };\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({ purchaseable: sum > 0 ? true : false })\n    }\n\n    addIngredientHandler = (type) => {\n        const newCount = this.state.ingredients[type] + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = newCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const newPrice = this.state.totalPrice + priceAddition;\n\n        this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\n\n        this.updatedPurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        if (this.state.ingredients[type] <= 0) {\n            return;\n        }\n        const newCount = this.state.ingredients[type] - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = newCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const newPrice = this.state.totalPrice - priceAddition;\n\n        this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\n\n        this.updatedPurchaseState(updatedIngredients);\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n\n        let orderSummary;\n        if (this.state.loading) {\n            orderSummary = <Spinner />\n        } else {\n            orderSummary = null;\n            if (this.state.ingredients) {\n                orderSummary = (\n                    <OrderSummary \n                        ingredients={ this.state.ingredients } \n                        cancelPurchase={ this.cancelPurchaseHandler } \n                        continuePurchase={ this.continuePurchaseHandler } \n                        totalPrice={ this.state.totalPrice } />\n                )\n            }\n        }\n\n        let burger = this.state.error ? <p style={{textAlign: 'center'}}>Oops! looks like ingredients can't be loaded.</p> : <Spinner style={{transform: 'translateY(25vh)'}} />;\n        if (this.state.ingredients) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={ this.state.ingredients } />\n                    <BuildControls \n                        addIngredient={ this.addIngredientHandler } \n                        removeIngredient={ this.removeIngredientHandler } \n                        disabled={ disabledInfo } \n                        totalPrice={ this.state.totalPrice } \n                        purchaseable={ this.state.purchaseable } \n                        purchasing={ this.purchaseHandler } />\n                </Aux>\n            )\n        }\n        \n        return (\n            <Aux>\n                <Modal show={ this.state.purchasing } modalClose={ this.cancelPurchaseHandler }>\n                    { orderSummary }\n                </Modal>\n                { burger }\n            </Aux>\n        )\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className='CheckoutSummary'>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={ props.ingredients }/>\n            </div>\n            <Button \n                type='Success'\n                click={ props.checkoutContinue }>CONTINUE</Button>\n            <Button \n                type='Danger'\n                click={ props.checkoutCancel }>CANCEL</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport \"./Input.css\";\n\nconst input = (props) => {\n    let label = props.children;\n\n    const otherProps = {\n        ...props\n    }\n\n    delete otherProps.children;\n    delete otherProps.dangerouslySetInnerHTML;\n\n    let inputElement = null;\n    switch(props.type) {\n        case ( 'textarea' ):\n            delete otherProps.type;\n            inputElement = <textarea {...otherProps} />;\n            break;\n        case ( null || undefined ): \n            inputElement = null;\n            break;\n        case ( 'select' ):\n            const options = props.options;\n            delete otherProps.options;\n            inputElement = (\n                <select {...otherProps}>\n                    { options.map(option => (\n                        <option value={ option.value } key={ option.value }>{ option.displayValue }</option>\n                    )) }\n                </select>\n            );\n            break;\n        default: {\n            inputElement = <input {...otherProps} />;\n        }\n    }\n\n    return (\n        <div className='Input'>\n            <label>{ label }</label>\n            { inputElement }\n        </div>\n    )\n}\n\nexport default input;","import React, { Component } from 'react';\nimport Button from '../../../component/UI/Button/Button';\nimport './DiliveryData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../component/UI/Spinner/Spinner';\nimport Input from '../../../component/UI/Input/Input';\n\nclass DiliveryData extends Component {\n    state = {\n        isFormValid: false,\n        orderForm: {\n            name: {\n                value: '',\n                validity: {\n                    required: true\n                },\n                isValid: false,\n                isTouched: false\n            },\n            street: {\n                value: '',\n                validity: {\n                    required: true\n                },\n                isValid: false,\n                isTouched: false\n            },\n            postalCode: {\n                value: '',\n                validity: {\n                    required: true,\n                    length: 6\n                },\n                isValid: false,\n                isTouched: false\n            },\n            country: {\n                value: '',\n                validity: {\n                    required: true\n                },\n                isValid: false,\n                isTouched: false\n            },\n            email: {\n                value: '',\n                validity: {\n                    required: true,\n                    isEmail: true\n                },\n                isValid: false,\n                isTouched: false\n            },\n            dilivery: {\n                value: 'fastest',\n                validity: {},\n                isValid: true,\n            }\n        },\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        this.setState({ loading: true });\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.totalPrice,\n            customer: {\n                name: this.state.orderForm.name.value,\n                address: {\n                    street: this.state.orderForm.street.value,\n                    postalCode: this.state.orderForm.postalCode.value,\n                    country: this.state.orderForm.country.value\n                },\n                email: this.state.orderForm.email.value\n            },\n            dilivery: this.state.orderForm.dilivery.value\n        }\n        axios.post('/orders.json', order)\n            .then((response) => {\n                this.setState({ loading: false });\n                this.props.history.push('/');\n                console.log(response);\n            }).catch((error) => {\n                this.setState({ loading: false });\n                console.log(error);\n            });\n    }\n\n\n    checkValidity = (value, rules) => {\n        if (!rules) {\n            return true;\n        }\n        let isValid = false;\n        if (rules.required) {\n            isValid = value.trim() !== '';\n        }\n\n        if (rules.isEmail) {\n            if(typeof value !== \"undefined\"){\n                let lastAtPos = value.lastIndexOf('@');\n                let lastDotPos = value.lastIndexOf('.');\n     \n                isValid = ((lastAtPos < lastDotPos && lastAtPos > 0 && value.indexOf('@@') == -1 && lastDotPos > 2 && (value.length - lastDotPos) > 2))\n            }  \n        }\n\n        if (rules.length) {\n            isValid = value.length === rules.length;\n        }\n\n        return isValid;\n    }\n\n    inputChangeHandler = (event) => {\n        if (event.target.name == 'dilivery') {\n            return;\n        }\n        const orderForm = {\n            ...this.state.orderForm\n        };\n        orderForm[event.target.name].value = event.target.value;\n        orderForm[event.target.name].isValid = this.checkValidity(orderForm[event.target.name].value, orderForm[event.target.name].validity)\n        orderForm[event.target.name].isTouched = true;\n\n        let isFormValid = true;\n        for (let input in this.state.orderForm) {\n            isFormValid = this.state.orderForm[input].isValid && isFormValid;\n        }\n\n        console.log(this.state)\n\n        this.setState({ orderForm, isFormValid });\n    }\n\n    render () {\n        let form = (\n            <form onSubmit={ this.orderHandler }>\n                <Input type='text' name='name' placeholder='Your Name' onChange={ this.inputChangeHandler } value={ this.state.orderForm.name.value } className={ this.state.orderForm.name.isValid || !this.state.orderForm.name.isTouched ? null : 'Invalid' } />\n                <Input type='email' name='email' placeholder='Your E-Mail' onChange={ this.inputChangeHandler } value={ this.state.orderForm.email.value } className={ this.state.orderForm.email.isValid || !this.state.orderForm.email.isTouched ? null : 'Invalid' } />\n                <Input type='text' name='street' placeholder='Street' onChange={ this.inputChangeHandler } value={ this.state.orderForm.street.value } className={ this.state.orderForm.street.isValid || !this.state.orderForm.street.isTouched ? null : 'Invalid' } />\n                <Input type='number' name='postalCode' placeholder='Postal Code' onChange={ this.inputChangeHandler } value={ this.state.orderForm.postalCode.value } className={ this.state.orderForm.postalCode.isValid || !this.state.orderForm.postalCode.isTouched ? null : 'Invalid' } />\n                <Input type='text' name='country' placeholder='Country' onChange={ this.inputChangeHandler } value={ this.state.orderForm.country.value } className={ this.state.orderForm.country.isValid || !this.state.orderForm.country.isTouched ? null : 'Invalid' } />\n                <Input type='select' name='dilivery' options={ [{value: 'fastest', displayValue: 'Fastest'}, {value: 'cheapest', displayValue: 'Cheapest'}] } onChange={ this.inputChangeHandler } value={ this.state.orderForm.dilivery.value } />\n                <Button type='Success' click={ this.orderHandler } disabled={ !this.state.isFormValid }>PLACE ORDER</Button>\n            </form>\n        )\n        if (this.state.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className='DiliveryData'>\n                <h4>Enter your dilivery details</h4>\n                { form }\n            </div>\n        )\n    }\n}\n\nexport default DiliveryData;","import React, { Component } from 'react';\nimport OrderSummary from '../../component/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom';\nimport DiliveryData from './DiliveryData/DiliveryData';\n\nclass checkout extends Component {\n    state = {\n        ingredients: null,\n        totalPrice: 0\n    }\n\n    checkoutCancelHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinueHandler = () => {\n        this.props.history.replace('/checkout/dilivery-data');\n    }\n\n    componentWillMount () {\n        const query = new URLSearchParams(this.props.location.search);\n        const ingredients = {};\n        let totalPrice;\n        for (let param of query.entries()) {\n            if(param[0] === 'totalPrice') {\n                totalPrice = param[1];\n            } else {\n                ingredients[param[0]] = +param[1];\n            }\n        }\n        this.setState({ ingredients, totalPrice })\n    }\n\n    render () {\n        return (\n            <div>\n                <OrderSummary \n                    ingredients={ this.state.ingredients } \n                    checkoutCancel={ this.checkoutCancelHandler } \n                    checkoutContinue={ this.checkoutContinueHandler } />\n                <Route path={ this.props.match.path + '/dilivery-data'}  render={(props) => <DiliveryData ingredients={ this.state.ingredients } totalPrice={ this.state.totalPrice } {...props} />} />\n            </div>\n        )\n    }\n}\n\nexport default checkout;","import React from 'react';\nimport './Order.css';\n\nconst order = (props) => {\n    const ingredients = [];\n    for (let ingredient in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredient,\n                amount: props.ingredients[ingredient]\n            }\n        )\n    }\n\n    const ingredientsOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '4px 8px',\n                border: '1px solid #cccccc',\n                padding: '5px'\n            }}\n            key={ig.name}>{ ig.name } ({ ig.amount })</span>\n    })\n\n    return (\n        <div className='Order'>\n            <p>Ingredients: { ingredientsOutput }</p>\n            <p>Price: &#8377;<strong>{ props.totalPrice }</strong></p>\n        </div>\n    )\n}\n\nexport default order;","import React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport Spinner from '../../component/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Order from '../../component/Order/Order';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount () {\n        axios.get('/orders.json')\n            .then((response) => {\n                const fetchedOrders = [];\n                for (let key in response.data) {\n                    fetchedOrders.push({\n                        ...response.data[key],\n                        id: key\n                    })\n                }\n                this.setState({ loading:false, orders: fetchedOrders });\n            }).catch((error) => {\n                this.setState({ loading:false });\n            })\n    }\n\n    render () {\n        this.state.orders.reverse();\n        let orders = (\n            this.state.orders.map(order => (\n                <Order \n                    key={order.id} \n                    ingredients={ order.ingredients } \n                    totalPrice={ order.price } />\n            ))\n        );\n        if (this.state.loading) {\n            orders = <Spinner style={{transform: 'translateY(25vh)'}} />\n        }\n        return (\n            <div>\n                { orders }\n            </div>\n\n        )\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\nimport Checkout from './container/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './container/Orders/Orders';\n\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact component={ BurgerBuilder } />\n        <Route path='/checkout' component={ Checkout } />\n        <Route path='/orders' component={ Orders } />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}