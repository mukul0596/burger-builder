{"version":3,"sources":["assets/images/burger-logo.png","hoc/Aux/Aux.js","component/Logo/Logo.js","component/Navigation/NavigationItems/NavigationItems.js","component/Navigation/SideDrawer/DrawerToogle/DrawerToogle.js","component/Navigation/Toolbar/Toolbar.js","component/UI/Backdrop/Backdrop.js","component/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","component/Burger/BurgerIngredient/BurgerIngredient.js","component/Burger/Burger.js","component/Burger/BuildControls/BuildControl/BuildControl.js","component/Burger/BuildControls/BuildControls.js","component/UI/Modal/Modal.js","component/UI/Button/Button.js","component/Burger/OrderSummary/OrderSummary.js","container/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","style","height","src","logoUrl","alt","navigationItems","href","drawerToogle","onClick","click","toolbar","toogle","backdrop","show","sideDrawer","attachedClasses","open","join","Aux","close","layout","state","showSideDrawer","closeSideDrawerHandler","setState","toogleSideDrawerHandler","prevState","this","Component","BurgerIngredient","ingredient","type","burger","burgerIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removeIngredient","disabled","addIngredient","controls","buildControls","totalPrice","ctrl","purchaseable","purchasing","modal","nextProps","nextState","modalClose","transform","opacity","button","orderSummary","textTransform","console","log","continuePurchase","cancelPurchase","INGREDIENT_PRICES","salad","meat","cheese","bacon","BurgerBuilder","continuePurchaseHandler","alert","cancelPurchaseHandler","purchaseHandler","updatedPurchaseState","sum","addIngredientHandler","newCount","updatedIngredients","priceAddition","newPrice","removeIngredientHandler","disabledInfo","OrderSummary","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a5dc629.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport logoUrl from '../../assets/images/burger-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className='Logo' style={{ height: props.height }}>\n        <img src={ logoUrl } alt='MyBurger'/>\n    </div>\n)\n\nexport default logo;","import React from 'react';\nimport './NavigationItems.css';\n\nconst navigationItems = (props) => (\n    <ul className='NavigationItems'>\n        <li className='NavigationItem'><a href='/' className='active'>Burger Builder</a></li>\n        <li className='NavigationItem'><a href='/'>Checkout</a></li>\n    </ul>\n)\n\nexport default navigationItems;","import React from 'react';\nimport './DrawerToogle.css';\n\nconst drawerToogle = (props) => (\n    <div onClick={props.click} className='DrawerToggle'>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default drawerToogle;","import React from 'react';\nimport './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToogle from '../SideDrawer/DrawerToogle/DrawerToogle';\n\nconst toolbar = (props) => (\n    <header className='Toolbar'>\n        <DrawerToogle click={ props.toogle } />\n        <Logo height='80%' />\n        <nav className='DesktopOnly'>\n            <NavigationItems />\n        </nav>\n    </header>\n)\n\nexport default toolbar;","import React from 'react';\nimport './Backdrop.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className='Backdrop' onClick={ props.click }></div> : null\n)\n\nexport default backdrop","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n    const attachedClasses = ['SideDrawer', props.open ? 'Open' : 'Close'].join(' ');\n    return (\n        <Aux>\n            <Backdrop show={ props.open } click={ props.close }/>\n            <div className={ attachedClasses }>\n                <Logo height='11%' />\n                <NavigationItems />\n            </div>\n        </Aux>\n    )\n}\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport './Layout.css';\nimport Toolbar from '../../component/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../component/Navigation/SideDrawer/SideDrawer';\n\nclass layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    closeSideDrawerHandler = () => {\n        this.setState({ showSideDrawer: false });\n    }\n\n    toogleSideDrawerHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        });\n    }\n\n    render() {\n        return(\n            <Aux>\n                <Toolbar toogle={ this.toogleSideDrawerHandler } />\n                <SideDrawer open={ this.state.showSideDrawer } close={ this.closeSideDrawerHandler } />\n                <main className='Content'>\n                    { this.props.children }\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default layout;","import React, { Component } from 'react';\nimport './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n        switch( this.props.type ) {\n            case ( 'bread-bottom' ):\n                ingredient = <div className='BreadBottom'></div>\n                break;\n            \n            case ( 'bread-top' ):\n                ingredient = (\n                    <div className='BreadTop'>\n                        <div className='Seeds1'></div>\n                        <div className='Seeds2'></div>\n                    </div>\n                )\n                break;\n            \n            case ( 'meat' ):\n                ingredient = <div className='Meat'></div>\n                break;\n            \n            case ( 'cheese' ):\n                ingredient = <div className='Cheese'></div>\n                break;\n            \n            case ( 'bacon' ):\n                ingredient = <div className='Bacon'></div>\n                break;\n            \n            case ( 'salad' ):\n                ingredient = <div className='Salad'></div>\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let burgerIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key={ igKey + i } type={ igKey } />\n        })\n    })\n    .reduce((arr, el) => {\n        return arr.concat(el);\n    }, []);\n\n\n    if (burgerIngredients.length === 0) {\n        burgerIngredients = <p>Please start adding ingredients!</p>\n    }\n\n    return (\n        <div className='Burger'>\n            <BurgerIngredient type='bread-top'/>\n            { burgerIngredients }\n            <BurgerIngredient type='bread-bottom'/>\n        </div>\n    )\n}\n\nexport default burger;","import React from 'react';\nimport './BuildControl.css'\n\nconst buildControl = (props) => (\n    <div className='BuildControl'>\n        <div className='Label'>{ props.label }</div>\n        <button className='Less' onClick={ () => props.removeIngredient(props.type) } disabled={ props.disabled }>-</button>\n        <button className='More' onClick={ () => props.addIngredient(props.type) }>+</button>\n    </div>\n)\n\nexport default buildControl;","import React from 'react';\nimport './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Meat', type: 'meat' },\n    { label: 'Cheese', type: 'cheese' },\n]\n\nconst buildControls = (props) => (\n    <div className='BuildControls'>\n        <p>Current Price: &#8377;<strong>{ props.totalPrice }</strong></p>\n        { controls.map(ctrl => (\n            <BuildControl \n                label={ ctrl.label } \n                key={ ctrl.label } \n                type={ ctrl.type } \n                addIngredient={ props.addIngredient } \n                removeIngredient={ props.removeIngredient } \n                disabled={ props.disabled[ctrl.type] } />\n        )) }\n        <button \n            className='OrderButton' \n            disabled={ !props.purchaseable }\n            onClick={ props.purchasing }>ORDER NOW!</button>\n    </div>\n)\n\nexport default buildControls;","import React, { Component } from 'react';\nimport './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass modal extends Component {\n    shouldComponentUpdate (nextProps, nextState) {\n        return nextProps.show !==this.props.show;\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop \n                    show={ this.props.show } \n                    click={ this.props.modalClose } />\n                <div \n                    className='Modal' \n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-50vh)',\n                        opacity: this.props.show ? 1 : 0\n                    }}>\n                    { this.props.children }\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default modal;","import React from 'react';\nimport './Button.css';\n\nconst button = (props) => (\n    <button \n        className={['Button', props.type ].join(' ')}\n        onClick={ props.click }>{ props.children }</button>\n)\n\nexport default button;","import React from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const ingredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={ igKey }>\n                    <span style={{textTransform: 'capitalize'}}>{ igKey }</span>: { props.ingredients[igKey] }\n                </li>\n            )\n        });\n    console.log(ingredients)\n    return  (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients: </p>\n            <ul>\n                { ingredients }\n            </ul>\n            <strong>Total Price: &#8377;{ props.totalPrice }</strong>\n            <p>Continue to checkout?</p>\n            <Button type='Success' click={ props.continuePurchase }>CONTINUE</Button>\n            <Button type='Danger' click={ props.cancelPurchase }>CANCEL</Button>\n        </Aux>\n    )\n}\n\nexport default orderSummary;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Buregr from '../../component/Burger/Burger';\nimport BuildControls from '../../component/Burger/BuildControls/BuildControls';\nimport Modal from '../../component/UI/Modal/Modal';\nimport OrderSummary from '../../component/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    salad: 5,\n    meat: 15,\n    cheese: 10,\n    bacon: 10\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            meat: 0,\n            bacon: 0,\n            cheese: 0\n        },\n        totalPrice: 30,\n        purchaseable: false,\n        purchasing: false\n    }\n\n    continuePurchaseHandler = () => {\n        alert('Order continued!');\n    }\n\n    cancelPurchaseHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true });\n    }\n\n    updatedPurchaseState = (ingredient) => {\n        const ingredients = {\n            ...ingredient\n        };\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({ purchaseable: sum > 0 ? true : false })\n    }\n\n    addIngredientHandler = (type) => {\n        const newCount = this.state.ingredients[type] + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = newCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const newPrice = this.state.totalPrice + priceAddition;\n\n        this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\n\n        this.updatedPurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        if (this.state.ingredients[type] <= 0) {\n            return;\n        }\n        const newCount = this.state.ingredients[type] - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = newCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const newPrice = this.state.totalPrice - priceAddition;\n\n        this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\n\n        this.updatedPurchaseState(updatedIngredients);\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        return (\n            <Aux>\n                <Modal show={ this.state.purchasing } modalClose={ this.cancelPurchaseHandler }>\n                    <OrderSummary \n                        ingredients={ this.state.ingredients } \n                        cancelPurchase={ this.cancelPurchaseHandler } \n                        continuePurchase={ this.continuePurchaseHandler } \n                        totalPrice={ this.state.totalPrice } />\n                </Modal>\n                <Buregr ingredients={ this.state.ingredients } />\n                <BuildControls \n                    addIngredient={ this.addIngredientHandler } \n                    removeIngredient={ this.removeIngredientHandler } \n                    disabled={ disabledInfo } \n                    totalPrice={ this.state.totalPrice } \n                    purchaseable={ this.state.purchaseable } \n                    purchasing={ this.purchaseHandler } />\n            </Aux>\n        )\n    }\n}\n\nexport default BurgerBuilder;","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n    <Layout>\n      <BurgerBuilder />\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}